#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanrules.desc=R\u00e8gles d'analyse passive

pscanrules.headerxssprotectionscanner.name=Protection XSS du navigateur Internet non activ\u00e9e
pscanrules.headerxssprotectionscanner.desc=La protection XSS du navigateur Internet n'est pas activ\u00e9e, ou est d\u00e9sactiv\u00e9e par la configuration de l'en-t\u00eate de r\u00e9ponse HTTP 'X-XSS-Protection' sur le serveur web
pscanrules.headerxssprotectionscanner.refs=https\://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps\://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/
pscanrules.headerxssprotectionscanner.extrainfo=L'en-t\u00eate de r\u00e9ponse HTTP X-XSS-Protection autorise le serveur internet \u00e0 activer ou d\u00e9sactiver le m\u00e9canisme de protection XSS du navigateur internet. Les valeurs suivantes tenteraient d'activer la protection\:\nX-XSS-Protection\: 1; mode \= block\nX-XSS-Protection\: 1; report \= http\://www.example.com/xss\nLes valeurs suivantes d\u00e9sactiveraient cette protection\:\nX-XSS-Protection\: 0\nL'en-t\u00eate de r\u00e9ponse HTTP X-XSS-Protection est actuellement support\u00e9e par Internet Explorer, Chrome et Safari (WebKit). \nNotez que cette alerte n'est d\u00e9clench\u00e9e que si le corps de r\u00e9ponse pouvaient contenir une charge utile XSS (avec un type de contenu texte, d'une longueur diff\u00e9rente de z\u00e9ro).
pscanrules.headerxssprotectionscanner.soln=Assurez-vous que le filtre XSS du navigateur internet est activ\u00e9, en renseignant l'en-t\u00eate de r\u00e9ponse HTTP X-XSS-Protection \u00e0 '1'.

pscanrules.xframeoptionsscanner.name=En-t\u00eate X-Frame-Options pas renseign\u00e9
pscanrules.xframeoptionsscanner.desc=L'en-t\u00eate X-Frame-Options n'a pas \u00e9t\u00e9 renseign\u00e9e pour d\u00e9fendre contre les attaques de 'ClickJacking'.
pscanrules.xframeoptionsscanner.missing.desc=L'en-t\u00eate X-Frame-Options n'est pas incluse dans la r\u00e9ponse HTTP pour prot\u00e9ger contre les attaques de 'ClickJacking'.
pscanrules.xframeoptionsscanner.otherinfo=Avec un seuil "Haut", ce scanner n'alertera pas pour les r\u00e9ponses d\u2019erreur client ou serveur.
pscanrules.xframeoptionsscanner.refs=http\://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx
pscanrules.xframeoptionsscanner.soln=La plupart des navigateurs internet modernes supportent l'en-t\u00eate HTTP X-Frame-Options. Assurez-vous que celle-ci est renseign\u00e9e sur toutes les pages internet retourn\u00e9es par votre site (si cette page ne doit \u00eatre encadr\u00e9e que par des pages de votre serveur (p.ex. fait partie d'un FRAMESET), alors utilisez la valeur SAMEORIGIN, sinon choisissez la valeur DENY quand la page n'est jamais encadr\u00e9e. ALLOW-FROM permet \u00e0 des sites sp\u00e9cifiques d'encadrer la page, pour autant que le navigateur le supporte).

pscanrules.xcontenttypeoptionsscanner.name=En-t\u00eate X-Content-Type-Options manquant
pscanrules.xcontenttypeoptionsscanner.desc=L'en-t\u00eate X-Content-Type-Options contre le sniffing MIME n'est pas renseign\u00e9 \u00e0 'nosniff'. Ceci permet \u00e0 de vielles versions d'Internet Explorer et de Chrome de pratiquer le sniffing MIME sur le corps de r\u00e9ponse, conduisant potentiellement \u00e0 l'interpr\u00e9tation et l'affichage du contenu dans un autre type que celui d\u00e9clar\u00e9. A l'heure actuelle (d\u00e9but 2014), les anciennes versions de Firefox utiliseront le type de contenu d\u00e9clar\u00e9 (au cas o\u00f9 un type est d\u00e9termin\u00e9), plut\u00f4t qu'analyser le MIME.
pscanrules.xcontenttypeoptionsscanner.otherinfo=Ce probl\u00e8me s'applique toujours aux pages de type erreur (401, 403, 500, etc.), car ces pages sont encore souvent touch\u00e9es par des probl\u00e8mes d'injection, auquel cas il est encore possible que les navigateurs interpr\u00e9tent des pages autrement que selon leur type de contenu r\u00e9el.
pscanrules.xcontenttypeoptionsscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers
pscanrules.xcontenttypeoptionsscanner.soln=Assurez-vous que l'application ou le serveur internet renseigne l'en-t\u00eate Content-Type correctement, et que l'en-t\u00eate X-Content-Type-Options prenne la valeur 'nosniff' pour toutes les pages internet.\nSi possible, assurez-vous que l'utilisateur utilise un navigateur moderne et conforme aux standards, qui ne pratique pas du tout le sniffing MIME, ou qui puisse \u00eatre command\u00e9 par l'application ou le serveur internet de mani\u00e8re \u00e0 ne pas pratiquer le sniffing MIME.

pscanrules.applicationerrorscanner.name=Divulgation par erreur dans l'application
pscanrules.applicationerrorscanner.desc=Cette page contient un message d\u2019erreur/avertissement qui peut divulguer des informations sensibles, comme l\u2019emplacement du fichier qui a produit l\u2019exception non g\u00e9r\u00e9e. Cette information peut servir \u00e0 lancer d'autres attaques contre l\u2019application web. L\u2019alerte pourrait \u00eatre un faux positif si le message d\u2019erreur se trouve \u00e0 l\u2019int\u00e9rieur d\u2019une page de documentation.
pscanrules.applicationerrorscanner.soln=Examinez le code source de cette page. Mettez en place des pages d\u2019erreur personnalis\u00e9es. Envisagez d\u2019impl\u00e9menter un m\u00e9canisme fournissant une r\u00e9f\u00e9rence/identificateur unique de l'erreur au client (navigateur), tout en journalisant les d\u00e9tails du c\u00f4t\u00e9 serveur, les cachant ainsi \u00e0 l\u2019utilisateur.

pscanrules.cachecontrolscanner.name=En-t\u00eates HTTP Pragma et Cache-control incomplets ou absents
pscanrules.cachecontrolscanner.desc=Les en-t\u00eates HTTP cache-control et pragma n\u2019ont pas \u00e9t\u00e9 d\u00e9finis correctement ou manquent, permettant au navigateur et aux proxys de mettre en cache le contenu.
pscanrules.cachecontrolscanner.soln=Chaque fois que possible, assurez-vous que l'en-t\u00eate HTTP cache-control est renseign\u00e9e \u00e0 no-cache, no-store, must-revalidate, private; et que l\u2019en-t\u00eate pragma HTTP est renseign\u00e9e \u00e0 no-cache.
pscanrules.cachecontrolscanner.refs=https\://www.owasp.org/index.php/Session_Management_Cheat_Sheet\#Web_Content_Caching

pscanrules.contenttypemissingscanner.name=En-t\u00eate Content-Type manquant
pscanrules.contenttypemissingscanner.name.empty=Content-Type Header Empty
pscanrules.contenttypemissingscanner.desc=The Content-Type header was either missing or empty.
pscanrules.contenttypemissingscanner.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissingscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponlyscanner.name=Cookie No HttpOnly Flag
pscanrules.cookiehttponlyscanner.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponlyscanner.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponlyscanner.refs=http\://www.owasp.org/index.php/HttpOnly

pscanrules.cookiesecureflagscanner.name=Cookie sans indicateur s\u00fbr
pscanrules.cookiesecureflagscanner.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflagscanner.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflagscanner.refs=http\://www.owasp.org/index.php/Testing_for_cookies_attributes_(OWASP-SM-002)

pscanrules.crossdomainscriptinclusionscanner.name=Inclusion de fichier source JavaScript inter-domaine
pscanrules.crossdomainscriptinclusionscanner.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusionscanner.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.mixedcontentscanner.name=Pages s\u00e9curis\u00e9es incluent un contenu mixte
pscanrules.mixedcontentscanner.name.inclscripts=Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontentscanner.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontentscanner.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontentscanner.refs=https\://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet

pscanrules.passwordautocompletescanner.name=Saisie semi-automatique du mot de passe dans le navigateur
pscanrules.passwordautocompletescanner.desc=The AUTOCOMPLETE attribute is not disabled on an HTML FORM/INPUT element containing password type input.  Passwords may be stored in browsers and retrieved.
pscanrules.passwordautocompletescanner.soln=Turn off the AUTOCOMPLETE attribute in forms or individual input elements containing password inputs by using AUTOCOMPLETE\='OFF'.
pscanrules.passwordautocompletescanner.refs=http\://www.w3schools.com/tags/att_input_autocomplete.asp\nhttps\://msdn.microsoft.com/en-us/library/ms533486%28v\=vs.85%29.aspx

pscanrules.testinfoprivateaddressdisclosure.name=Divulgation d'IP priv\u00e9
pscanrules.testinfoprivateaddressdisclosure.desc=Une adresse IP priv\u00e9e comme 10.x.x.x, 172.x.x.x, 192.168.x.x a \u00e9t\u00e9 trouv\u00e9e dans le corps de la r\u00e9ponse HTTP. Cette information pourrait \u00eatre utile pour d'autres attaques ciblant les syst\u00e8mes internes.
pscanrules.testinfoprivateaddressdisclosure.soln=Supprimez l\u2019adresse IP priv\u00e9e du corps de r\u00e9ponse HTTP. Pour des commentaires, utilisez un commentaire JSP/ASP au lieu d'un commentaire HTML/JavaScript, qui peut \u00eatre vu par les navigateurs clients.
pscanrules.testinfoprivateaddressdisclosure.refs=https\://tools.ietf.org/html/rfc1918

pscanrules.testinfosessionidurl.name=ID de session dans la r\u00e9\u00e9criture d\u2019URL
pscanrules.testinfosessionidurl.desc=La r\u00e9\u00e9criture d'URL est utilis\u00e9e pour tracer les ID de session utilisateur. L\u2019ID de session peut \u00eatre diffus\u00e9 via l\u2019en-t\u00eate referer multisite. En outre, l'ID de session pourrait \u00eatre stock\u00e9 dans l\u2019historique du navigateur ou les journaux serveur.
pscanrules.testinfosessionidurl.soln=Pour s\u00e9curiser des contenus, mettez l\u2019ID de session dans un cookie. Pour \u00eatre encore plus s\u00fbr, envisagez la combinaison d'un cookie et de la r\u00e9\u00e9criture d\u2019URL.
pscanrules.testinfosessionidurl.refs=http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.testinfosessionidurl.referrer.alert=Le referer expose l'ID de session
pscanrules.testinfosessionidurl.referrer.desc=Un lien hypertexte pointant vers le nom d\u2019h\u00f4te a \u00e9t\u00e9 trouv\u00e9. Comme la r\u00e9\u00e9criture d\u2019URL avec l\u2019ID de session est utilis\u00e9e, il peut \u00eatre divulgu\u00e9e dans un en-t\u00eate referer aux h\u00f4tes externes.
pscanrules.testinfosessionidurl.referrer.soln=Il s\u2019agit d\u2019un risque si l\u2019ID de session est sensible et que le lien hypertexte renvoie \u00e0 un h\u00f4te externe ou tiers. Pour s\u00e9curiser des contenus, mettre l'ID de session dans le cookie de session s\u00e9curis\u00e9.

